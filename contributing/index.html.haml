---
layout: base
---
.row
  .span12
    %h2 Development

.row
  .span9
    :markdown
      This page gives your all the information you need to get started with hacking on MapStruct. MapStruct is a very young open source project and we're looking forward to any contribution!

    %h3#section-01 1. Team

    :markdown
      MapStruct is brought to you by a helpful international community of open source enthusiasts. The following persons are contributing to the project:

      <table class="table">
        <tr>
          <td width="20%"><img src="http://www.gravatar.com/avatar/8e25c0ca4bf25113bd9c0ccc5d118164?s=100" /></td>
          <td>
            <p><b>Gunnar Morling</b> is the original author of MapStruct and leads the project.</p>
            <p>He is a long-time Java developer and open-source committer. He is part of the <a href="www.hibernate.org">Hibernate</a> team at <a href="www.redhat.com">Red Hat</a>, where he works on Hibernate OGM, Validator and Search. You can follow him on <a href="https://plus.google.com/+GunnarMorling/">Google+</a> and <a href="https://twitter.com/GunnarMorling">Twitter</a> or check out his <a href="http://www.gunnarmorling.de/">blog</a>.</p>
          </td>
        </tr>
        <tr>
          <td width="20%"><img src="http://www.gravatar.com/avatar/cbe8a9133ef3337eb267252a06f649bf?s=100" /></td>
          <td>
            <p><b>Andreas Gudian</b> was the first committer to join Gunnar in his efforts.</p>
            <p>He is an experienced developer and architect for enterprise Java applications, where MapStruct can make a real difference. Andreas contributes to various open source projects and is also committer at the Apache Maven project, maintaining the <a href="http://maven.apache.org/surefire/maven-surefire-plugin/">Surefire</a> plugin.</p>
          </td>
        </tr>
        <tr>
          <td width="20%"><img src="http://www.gravatar.com/avatar/4c7e9da6e878e628c51fdd267a9dd7a9?s=100" /></td>
          <td>
             <p><b>Sjaak Derksen</b>, enthusiastic first-hour user of MapStruct</p>
             <p>He has well over 15 years of experience in Java / JEE development as architect, technical lead, developer and tester in the domain of Telecommunications. Sjaak started working more recently on spatial subsurface data interchange (e.g. Inspire, GML) were he believes MapStruct can be a true asset, reducing the amount of repetitive, error-prone work.</p>
         </td>
        </tr>
      </table>

    %h3#section-02 2. Contributing

    :markdown
      You love MapStruct but miss a certain feature? You found a bug and want to report it, or even better, fix it yourself? That's great! MapStruct is all open source and your help is highly appreciated.

      <table class="table">
        <thead>
          <tr>
            <th>What</th><th>Where</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td width="20%">Source code</td><td><a href="https://github.com/mapstruct/mapstruct">https://github.com/mapstruct/mapstruct</a></td>
          </tr>
          <tr>
            <td width="20%">Issue tracker</td><td><a href="https://github.com/mapstruct/mapstruct/issues">https://github.com/mapstruct/mapstruct/issues</a></td>
          </tr>
          <tr>
            <td width="20%">Discussions</td><td>Join the <a href="https://groups.google.com/forum/?fromgroups#!forum/mapstruct-users">mapstruct-users</a> Google group</td>
          </tr>
          <tr>
            <td width="20%">CI build</td><td><a href="https://mapstruct.ci.cloudbees.com">https://mapstruct.ci.cloudbees.com</a></td>
          </tr>
          <tr>
            <td width="20%">This web site</td><td><a href="https://github.com/mapstruct/mapstruct.org">https://github.com/mapstruct/mapstruct.org</a></td>
          </tr>
        </tbody>
      </table>

      MapStruct follows the _Fork & Pull_ development approach. To get started just fork the [MapStruct repository](http://github.com/mapstruct/mapstruct) to your GitHub account and create a new topic branch for each change. Once you are done with your change, submit a [pull request](https://help.github.com/articles/using-pull-requests) against the MapStruct repo.

      When doing changes, keep the following best practices in mind:

      * Provide test cases
      * Update the [reference documentation](mapstruct.org/documentation) on [mapstruct.org](mapstruct.org) where required
      * Discuss new features you'd like to implement at the [Google group](https://groups.google.com/forum/?fromgroups#!forum/mapstruct-users) before getting started
      * Create one pull request per feature
      * Provide a meaningful history, e.g. squash intermediary commits before submitting a pull request
      * Start your commit messages with "#&lt;issue no&gt;", e.g. "#123 Adding new mapping feature"
      * Have git automatically manage line endings as described [here](https://help.github.com/articles/dealing-with-line-endings)
      * Format your sources using the provided IntelliJ [code style template](https://github.com/mapstruct/mapstruct/blob/master/etc/mapstruct.xml). Eclipse users can import the [Eclipse code formatter settings](https://github.com/mapstruct/mapstruct/blob/master/etc/eclipse-formatter-config.xml) - it's close enough, but configure the Save Actions to only format edited lines. If you use another IDE stick to the used style as much as possible.

    %h3#section-03 3. Technical documentation

    :markdown
      The MapStruct code base is thoroughly documented via JavaDoc. You can find the latest docs [here](https://mapstruct.ci.cloudbees.com/job/mapstruct-javadoc/javadoc/). The individual pages contain generated class diagrams showing type hierarchies and package contents.

      To get yourself acquainted with the code base, you could start by taking a look at the docs of [MappingProcessor](https://mapstruct.ci.cloudbees.com/job/mapstruct-javadoc/javadoc/index.html?org/mapstruct/ap/MappingProcessor.html) which give a high-level overview of the general architecture. Then check out the [org.mapstruct.ap.model](https://mapstruct.ci.cloudbees.com/job/mapstruct-javadoc/javadoc/index.html?org/mapstruct/ap/model/package-summary.html) and [org.mapstruct.ap.processor](https://mapstruct.ci.cloudbees.com/job/mapstruct-javadoc/javadoc/index.html?org/mapstruct/ap/processor/package-summary.html) packages.

      If you have any questions don't hesitate [to ask](https://groups.google.com/forum/?fromgroups#!forum/mapstruct-users), we here to help!

    %h3#section-04 4. Debugging the annotation processor

    :markdown
      The most straight-forward way to debug the MapStruct annotation processor is to use your IDE and debug one of the JUnit tests in the processor module. The processor is then executed with the same JDK that you use the run the tests with.

      But there are subtle differences in the way different compilers implement the annotation processor API, so you might come to a point where you need to debug a specific problem with a certain compiler. The MapStruct integration tests run different smaller Maven projects with different compilers, by using compiler implementations pulled in as dependencies to the maven-compiler-plugin, and by [Maven Toolchains](http://maven.apache.org/guides/mini/guide-using-toolchains.html) (see [etc/toolchains-example.xml](https://github.com/mapstruct/mapstruct/blob/master/etc/toolchains-example.xml) for a template to modify and put into your local ```~/.m2``` directory).

      To debug an integration test, pass ```-DprocessorIntegrationTest.debug=true``` to the test process. A test case that uses Maven Toolchains (currently ```oracle_java_6``` and ```oracle_java_7```) will wait for a remote debugger to attach on port ```8000```. The other tests will launch ```mvnDebug``` internally, which by default also lets the Maven process wait on port ```8000``` for a remote debugger.

      If you like to launch the test with maven, use a command such as the following to focus on a single test case:

    %pre.prettyprint.linenums
      = preserve do
        :escaped
          mvn test -Dtest=<TestClass>#<TestCase> -DprocessorIntegrationTest.debug=true

          mvn test -Dtest=SimpleTest#oracle_java_6 -DprocessorIntegrationTest.debug=true

    %h3#section-05 5. Updating mapstruct.org

    :markdown
      This web site ([mapstruct.org/](http://mapstruct.org)) is created using the fantastic [awestruct](http://awestruct.org/) tool. To update the web site fork the [mapstruct.org repo](http://github.com/mapstruct/mapstruct.org) and create a pull request with your changes.

      The individual pages are written in [Haml](http://haml.info/) and [Markdown](http://daringfireball.net/projects/markdown/) and converted into HTML by awestruct. Building the site requires Ruby 1.9.x to be installed on your system.

    :markdown
      To build the web page run

    %pre.prettyprint.linenums
      = preserve do
        :escaped
          rake clean preview

    :markdown
      The web site can then be acessed at [http://localhost:9009](http://localhost:9009). Changes to the source files can be viewed in the browser simply be refreshing the page.

    %h3#section-06 6. Building MapStruct within an IDE

    %h4 6.1 IntelliJ IDEA

    :markdown
      After youÂ´ve cloned mapstruct you can import it by selecting "File -> Import Module ..." and then selecting the top level aggregator _pom.xml_ file located in the root folder. IDEA then will load mapstruct, resolve all dependencies and compile the source.

      You might face an error on IDEAs Message tab saying

      <img src="/images/idea-processor-error.png" style="padding-bottom: 3px;"/>

      If so, open the preferences window, navigate to Compiler -> Annotation processor and untick checkbox "Enable annotation processing" at "Annotation profile for mapstruct-integrationtest".

      <img src="/images/idea-annotation-conf.png" style="padding-bottom: 3px;"/>

       You should now be able to rebuild mapstruct.

       For running mapstruct unit tests from IDEA open the "Run/Debug Configurations" preferences, expand "Default" on the left side and navigate to "JUnit". There choose $MODULE_DIR$ as the working directory and you should now be able to run JUnit tests from IDEA.

       <img src="/images/idea-unittest-conf.png" style="padding-bottom: 3px;"/>

    %h3#section-07 7. License

    :markdown
      MapStruct is distributed under the [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0.html). By submitting a pull request you agree to license your work under that license and you affirm that your contribution doesn't violate any rights of other parties.

  .span3
    #toc{ :"data-offset-top"=>"0", :"data-spy"=>"affix" }
      %h5 Contents
      %ol.nav.nav-list
        %li.active
          %a{ :href=>"#section-01" } Team
        %li
          %a{ :href=>"#section-02" } Contributing
        %li
          %a{ :href=>"#section-03" } Technical documentation
        %li
          %a{ :href=>"#section-03" } Debugging the annotation processor
        %li
          %a{ :href=>"#section-05" } Updating mapstruct.org
        %li
          %a{ :href=>"#section-06" } Building MapStruct within an IDE
        %li
          %a{ :href=>"#section-07" } License

      %span{ :style=>"text-align: center"}
        :markdown
          <p style="padding-top: 20px;">&nbsp;</p>
          <a href="https://mapstruct.ci.cloudbees.com/"><img src="http://www.cloudbees.com/sites/default/files/Button-Built-on-CB-1.png"/></a>
          [![Build Status](https://mapstruct.ci.cloudbees.com/job/mapstruct-snapshot/badge/icon)](https://mapstruct.ci.cloudbees.com/job/mapstruct-snapshot/)

    :javascript
      (function(jQuery){
        jQuery( document ).ready( function() {
          $(document.body).scrollspy({
            target: "#toc"
          });
        });
      }(jQuery))
